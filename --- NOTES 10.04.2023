1. Review where we are. 

1a. Run app

1b. Look at html pages:

index.html
layout.html
add.html

BACK TO SLIDE DECK #2
1c. Look at python:

views.index()
views.add() - delete all but last version
forms.NewTaskForm() - min_length=3, p>5
urls.py
forms.py


---------------------------------------------------------------------------------------------------
2. How can we show a success message on the home page? 
 
2a. Before redirect, add: 
from django.contrib import messages
                messages.success(request, f"Task {task}@{priority} added" )

2b. Inside index.html:
{% if messages %}
<ul class="messages">
    {% for message in messages %}
        <li>{{ message }}</li>
    {% endfor %}
</ul>
{% endif %}

---------------------------------------------------------------------------------------------------
3. How about going to the index page with an error message? 

Replace: 
                return render(request, 'tasks/add.html', {
                    "form": f,
                    "errormessage": "Duplicate task not allowed"
                })

with: 

                messages.error(request, "Duplicate tasks not allowed." )
                messages.warning(request, "Perhaps you have typo?")
                return redirect('tasks:index')

---------------------------------------------------------------------------------------------------
4. Would like to color the error, warning, success messages:

ul.messages {
  list-style-type: none;
  margin: 0;
  padding: 0;
} 
           error {
                background-color: red;
                color: white;
            }
            success {
                background-color: green;
                color: white;
            }
            warning {
                background-color: orange;
            }


{% if messages %}
<ul class="messages">
    {% for message in messages %}
    <li {% if message.tags %} class="{{ message.tags }}"{% endif %}>{{ message }}</li>
    {% endfor %}
</ul>
{% endif %}

---------------------------------------------------------------------------------------------------
5. How would we write delete? 

urls.py:
    path('delete-task', views.delete, name="delete"),

link on index page:
<p><a href="{% url 'tasks:delete'%}">Delete a task</a></p>

delete.html: copy from add.html

def delete(request):
    return render(request, "tasks/delete.html", {"form": TaskNameForm()})

CLASS EXERCISE:
1) new form


class TaskNameForm(forms.Form):
    task = forms.CharField(label="Task", min_length=2)

2) action, just like the add method

def delete(request):
    if request.method == "POST":
        f = TaskNameForm(request.POST)
        if f.is_valid():
            task = f.cleaned_data["task"]
            if task in tasks:
                tasks.remove(task)
                return redirect('tasks:index')
            else:
                return render(request, 'tasks/delete.html', {
                    "form": f,
                    "errormessage": "Cannot find task to delete"
                })
        else:
            return render(request, 'tasks/delete.html', {"form": f})
    else:
        return render(request, "tasks/delete.html", {"form": TaskNameForm()})



** Problems: 
1) add() and delete() are so similar; shame to write again. 
2) two forms are similar; need to be in sync
3) adding a field to form needs to get mirrored in html, processor



---------------------------------------------------------------------------------------------------
6. Problem is that storing tasks in global window; would like data to be
constrained within a browser. 

def index(request):
    if "tasks" not in request.session:
        request.session["tasks"] = []
    return render(request, "tasks/index.html", {
        "tasks": request.session["tasks"]
    })

and in add:
        if form.is_valid():
            task = form.cleaned_data["task"]
            request.session["tasks"] += [task]
            return HttpResponseRedirect(reverse("tasks:index"))

need to migrate
